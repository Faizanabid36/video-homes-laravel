<?php

namespace App;

use App\AccountType;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use phpseclib\System\SSH\Agent\Identity;

class User extends Authenticatable
{
    use Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $guarded = [];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::created(function ($user) {
            $playlist = new Playlist;
            $playlist->name = "Unlisted";
            $playlist->user_id = $user->id;
            $playlist->save();
            $identity=new Identity();
            $identity->user_id=$user->id;
            $identity->facebook='';
            $identity->instagram='';
            $identity->youtube_channel='';
            $identity->twitter='';
            $identity->save();
        });
    }

    public function blockedusers()
    {
        return $this->hasMany(BlockedUser::class, 'user_id', 'id');
    }

    public function blockedbyusers()
    {
        return $this->hasMany(BlockedUser::class, 'blocked_user_id', 'id');
    }
    public function account_types()
    {
        return $this->hasOne(AccountType::class,'user_id');
    }
    public function user_role()
    {
        return $this->hasOne(UserRole::class,'id','role');
    }
    public function social_identity()
    {
        return $this->hasOne(SocialIdentity::class,'user_id','id');
    }
}
